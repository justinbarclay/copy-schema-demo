* Demo Setup
*** Building the docker image
Start the database
#+begin_src shell
docker run -d -e PGDATA='/data' -e POSTGRES_DB='clone_schema_db' -e POSTGRES_USER='postgres' -e POSTGRES_PASSWORD='123456' -p 5432:5432 "postgres:13.4-alpine"
#+end_src

Clone down the rails sample app respository

#+begin_src shell
git clone git@github.com:mhartl/sample_app_6th_ed.git ~/rails-app
#+end_src

Update database config to use postgres over sqlite and then create/populate the database.

#+begin_src shell
rails db:create
rails db:migrate
rails db:seed
#+end_src

Then stop the database, commit it and push it up.
#+begin_src shell
cont_id=$(docker ps -q)
docker stop $cont_id
docker commit $cont_id clone-schema-demo
docker tag clone-schema-demo justinbarclay/clone-schema-demo_beta:v1
docker push justinbarclay/clone-schema-demo_beta:v1
#+end_src

*** Running the docker image
#+begin_src shell
docker run -d -e PGDATA='/data' -e POSTGRES_DB='clone_schema_db' -e POSTGRES_USER='postgres' -e POSTGRES_PASSWORD='123456' -p 5432:5432 "justinbarclay/clone-schema-demo_beta:v1"
#+end_src

#+RESULTS:
: 15fba130dfdf0d8f2d388807be01d6ac1613421eac732b9e569c1007e330ddd0



*** Log Error message in another buffer in Emacs
Evaluate this code to have PSQL error logs displayed within Emacs
#+begin_src elisp
(defvar org-babel-eval-verbose t
  "A non-nil value makes `org-babel-eval' display")

(defun org-babel-eval (cmd body)
  "Run CMD on BODY.
If CMD succeeds then return its results, otherwise display
STDERR with `org-babel-eval-error-notify'."
  (let ((err-buff (get-buffer-create " *Org-Babel Error*")) exit-code)
    (with-current-buffer err-buff (erase-buffer))
    (with-temp-buffer
      (insert body)
      (setq exit-code
            (org-babel--shell-command-on-region
             (point-min) (point-max) cmd err-buff))
      (if (or (not (numberp exit-code)) (> exit-code 0)
              (and org-babel-eval-verbose (> (buffer-size err-buff) 0))) ; new condition
          (progn
            (with-current-buffer err-buff
              (org-babel-eval-error-notify exit-code (buffer-string)))
            nil)
        (buffer-string)))))
#+end_src

